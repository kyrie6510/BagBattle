// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct TablePropItemRowData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static TablePropItemRowData GetRootAsTablePropItemRowData(ByteBuffer _bb) { return GetRootAsTablePropItemRowData(_bb, new TablePropItemRowData()); }
  public static TablePropItemRowData GetRootAsTablePropItemRowData(ByteBuffer _bb, TablePropItemRowData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TablePropItemRowData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public short Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)0; } }
  public short PropType { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)0; } }
  public short ItemGridType { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)0; } }
  public short MaxScore { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)0; } }

  public static Offset<TablePropItemRowData> CreateTablePropItemRowData(FlatBufferBuilder builder,
      short Id = 0,
      short PropType = 0,
      short ItemGridType = 0,
      short MaxScore = 0) {
    builder.StartTable(4);
    TablePropItemRowData.AddMaxScore(builder, MaxScore);
    TablePropItemRowData.AddItemGridType(builder, ItemGridType);
    TablePropItemRowData.AddPropType(builder, PropType);
    TablePropItemRowData.AddId(builder, Id);
    return TablePropItemRowData.EndTablePropItemRowData(builder);
  }

  public static void StartTablePropItemRowData(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddId(FlatBufferBuilder builder, short Id) { builder.AddShort(0, Id, 0); }
  public static void AddPropType(FlatBufferBuilder builder, short PropType) { builder.AddShort(1, PropType, 0); }
  public static void AddItemGridType(FlatBufferBuilder builder, short ItemGridType) { builder.AddShort(2, ItemGridType, 0); }
  public static void AddMaxScore(FlatBufferBuilder builder, short MaxScore) { builder.AddShort(3, MaxScore, 0); }
  public static Offset<TablePropItemRowData> EndTablePropItemRowData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<TablePropItemRowData>(o);
  }
};

public struct TablePropItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static TablePropItem GetRootAsTablePropItem(ByteBuffer _bb) { return GetRootAsTablePropItem(_bb, new TablePropItem()); }
  public static TablePropItem GetRootAsTablePropItem(ByteBuffer _bb, TablePropItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TablePropItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public TablePropItemRowData? Datalist(int j) { int o = __p.__offset(4); return o != 0 ? (TablePropItemRowData?)(new TablePropItemRowData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int DatalistLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<TablePropItem> CreateTablePropItem(FlatBufferBuilder builder,
      VectorOffset datalistOffset = default(VectorOffset)) {
    builder.StartTable(1);
    TablePropItem.AddDatalist(builder, datalistOffset);
    return TablePropItem.EndTablePropItem(builder);
  }

  public static void StartTablePropItem(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddDatalist(FlatBufferBuilder builder, VectorOffset datalistOffset) { builder.AddOffset(0, datalistOffset.Value, 0); }
  public static VectorOffset CreateDatalistVector(FlatBufferBuilder builder, Offset<TablePropItemRowData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDatalistVectorBlock(FlatBufferBuilder builder, Offset<TablePropItemRowData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartDatalistVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<TablePropItem> EndTablePropItem(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<TablePropItem>(o);
  }
};

