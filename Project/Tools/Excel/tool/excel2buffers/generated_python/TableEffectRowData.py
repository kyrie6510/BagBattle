# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TableEffectRowData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TableEffectRowData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTableEffectRowData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TableEffectRowData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TableEffectRowData
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int16Flags, o + self._tab.Pos)
        return 0

    # TableEffectRowData
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TableEffectRowData
    def EffectTarget(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # TableEffectRowData
    def EffectType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # TableEffectRowData
    def EffectClass(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # TableEffectRowData
    def EffectValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(6)
def TableEffectRowDataStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddId(builder, Id): builder.PrependInt16Slot(0, Id, 0)
def TableEffectRowDataAddId(builder, Id):
    """This method is deprecated. Please switch to AddId."""
    return AddId(builder, Id)
def AddName(builder, Name): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(Name), 0)
def TableEffectRowDataAddName(builder, Name):
    """This method is deprecated. Please switch to AddName."""
    return AddName(builder, Name)
def AddEffectTarget(builder, EffectTarget): builder.PrependInt32Slot(2, EffectTarget, 0)
def TableEffectRowDataAddEffectTarget(builder, EffectTarget):
    """This method is deprecated. Please switch to AddEffectTarget."""
    return AddEffectTarget(builder, EffectTarget)
def AddEffectType(builder, EffectType): builder.PrependInt32Slot(3, EffectType, 0)
def TableEffectRowDataAddEffectType(builder, EffectType):
    """This method is deprecated. Please switch to AddEffectType."""
    return AddEffectType(builder, EffectType)
def AddEffectClass(builder, EffectClass): builder.PrependInt32Slot(4, EffectClass, 0)
def TableEffectRowDataAddEffectClass(builder, EffectClass):
    """This method is deprecated. Please switch to AddEffectClass."""
    return AddEffectClass(builder, EffectClass)
def AddEffectValue(builder, EffectValue): builder.PrependInt32Slot(5, EffectValue, 0)
def TableEffectRowDataAddEffectValue(builder, EffectValue):
    """This method is deprecated. Please switch to AddEffectValue."""
    return AddEffectValue(builder, EffectValue)
def End(builder): return builder.EndObject()
def TableEffectRowDataEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)