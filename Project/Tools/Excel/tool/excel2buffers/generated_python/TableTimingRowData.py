# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TableTimingRowData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TableTimingRowData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTableTimingRowData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TableTimingRowData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TableTimingRowData
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int16Flags, o + self._tab.Pos)
        return 0

    # TableTimingRowData
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TableTimingRowData
    def ListenTarget(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # TableTimingRowData
    def ListenType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # TableTimingRowData
    def ListenValue(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # TableTimingRowData
    def ListenValueAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # TableTimingRowData
    def ListenValueLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # TableTimingRowData
    def ListenValueIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        return o == 0

def Start(builder): builder.StartObject(5)
def TableTimingRowDataStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddId(builder, Id): builder.PrependInt16Slot(0, Id, 0)
def TableTimingRowDataAddId(builder, Id):
    """This method is deprecated. Please switch to AddId."""
    return AddId(builder, Id)
def AddName(builder, Name): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(Name), 0)
def TableTimingRowDataAddName(builder, Name):
    """This method is deprecated. Please switch to AddName."""
    return AddName(builder, Name)
def AddListenTarget(builder, ListenTarget): builder.PrependInt32Slot(2, ListenTarget, 0)
def TableTimingRowDataAddListenTarget(builder, ListenTarget):
    """This method is deprecated. Please switch to AddListenTarget."""
    return AddListenTarget(builder, ListenTarget)
def AddListenType(builder, ListenType): builder.PrependInt32Slot(3, ListenType, 0)
def TableTimingRowDataAddListenType(builder, ListenType):
    """This method is deprecated. Please switch to AddListenType."""
    return AddListenType(builder, ListenType)
def AddListenValue(builder, ListenValue): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(ListenValue), 0)
def TableTimingRowDataAddListenValue(builder, ListenValue):
    """This method is deprecated. Please switch to AddListenValue."""
    return AddListenValue(builder, ListenValue)
def StartListenValueVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def TableTimingRowDataStartListenValueVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartListenValueVector(builder, numElems)
def End(builder): return builder.EndObject()
def TableTimingRowDataEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)