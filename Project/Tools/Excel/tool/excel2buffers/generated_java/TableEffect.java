// automatically generated by the FlatBuffers compiler, do not modify

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class TableEffectRowData extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static TableEffectRowData getRootAsTableEffectRowData(ByteBuffer _bb) { return getRootAsTableEffectRowData(_bb, new TableEffectRowData()); }
  public static TableEffectRowData getRootAsTableEffectRowData(ByteBuffer _bb, TableEffectRowData obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public TableEffectRowData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public short Id() { int o = __offset(4); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public String Name() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer NameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer NameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public short Target() { int o = __offset(8); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public short Type() { int o = __offset(10); return o != 0 ? bb.getShort(o + bb_pos) : 0; }

  public static int createTableEffectRowData(FlatBufferBuilder builder,
      short Id,
      int NameOffset,
      short Target,
      short Type) {
    builder.startTable(4);
    TableEffectRowData.addName(builder, NameOffset);
    TableEffectRowData.addType(builder, Type);
    TableEffectRowData.addTarget(builder, Target);
    TableEffectRowData.addId(builder, Id);
    return TableEffectRowData.endTableEffectRowData(builder);
  }

  public static void startTableEffectRowData(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addId(FlatBufferBuilder builder, short Id) { builder.addShort(0, Id, 0); }
  public static void addName(FlatBufferBuilder builder, int NameOffset) { builder.addOffset(1, NameOffset, 0); }
  public static void addTarget(FlatBufferBuilder builder, short Target) { builder.addShort(2, Target, 0); }
  public static void addType(FlatBufferBuilder builder, short Type) { builder.addShort(3, Type, 0); }
  public static int endTableEffectRowData(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public TableEffectRowData get(int j) { return get(new TableEffectRowData(), j); }
    public TableEffectRowData get(TableEffectRowData obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

@SuppressWarnings("unused")
public final class TableEffect extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static TableEffect getRootAsTableEffect(ByteBuffer _bb) { return getRootAsTableEffect(_bb, new TableEffect()); }
  public static TableEffect getRootAsTableEffect(ByteBuffer _bb, TableEffect obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public TableEffect __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public TableEffectRowData datalist(int j) { return datalist(new TableEffectRowData(), j); }
  public TableEffectRowData datalist(TableEffectRowData obj, int j) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int datalistLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public TableEffectRowData.Vector datalistVector() { return datalistVector(new TableEffectRowData.Vector()); }
  public TableEffectRowData.Vector datalistVector(TableEffectRowData.Vector obj) { int o = __offset(4); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createTableEffect(FlatBufferBuilder builder,
      int datalistOffset) {
    builder.startTable(1);
    TableEffect.addDatalist(builder, datalistOffset);
    return TableEffect.endTableEffect(builder);
  }

  public static void startTableEffect(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addDatalist(FlatBufferBuilder builder, int datalistOffset) { builder.addOffset(0, datalistOffset, 0); }
  public static int createDatalistVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startDatalistVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endTableEffect(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public TableEffect get(int j) { return get(new TableEffect(), j); }
    public TableEffect get(TableEffect obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

